#!/bin/bash

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ RentAdmin –Ω–∞ cloud.ru —Å–µ—Ä–≤–µ—Ä–µ —Å HTTP –¥–æ—Å—Ç—É–ø–æ–º
echo "‚òÅÔ∏è –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ RentAdmin –Ω–∞ cloud.ru (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)"
echo "=========================================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã root –∏–ª–∏ –º–æ–∂–µ–º sudo
if [[ $EUID -ne 0 && ! $(sudo -n true 2>/dev/null) ]]; then
    echo "‚ùå –ù—É–∂–Ω—ã –ø—Ä–∞–≤–∞ sudo –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤"
    echo "–ó–∞–ø—É—Å—Ç–∏—Ç–µ: sudo ./deploy-cloud-http-fixed.sh"
    exit 1
fi

# –ü–æ–ª—É—á–∞–µ–º IP —Å–µ—Ä–≤–µ—Ä–∞
SERVER_IP=$(hostname -I | awk '{print $1}')
if [ -z "$SERVER_IP" ]; then
    SERVER_IP=$(curl -s ifconfig.me 2>/dev/null || echo "UNKNOWN")
fi

echo "üåê IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥ —Å sudo –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
run_cmd() {
    if [[ $EUID -eq 0 ]]; then
        "$@"
    else
        sudo "$@"
    fi
}

# –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É
echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
run_cmd apt update

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–∫–µ—Ç—ã (—Ä–µ—à–∞–µ–º –ø—Ä–æ–±–ª–µ–º—É —Å npm)
echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –ø–∞–∫–µ—Ç–æ–≤..."
run_cmd apt install -y nginx sqlite3 curl git ufw

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º npm –æ—Ç–¥–µ–ª—å–Ω–æ (—Ä–µ—à–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞)
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ npm..."
run_cmd apt remove -y npm 2>/dev/null || true
run_cmd apt install -y npm

# –ì–ª–æ–±–∞–ª—å–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ TypeScript
echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ TypeScript –≥–ª–æ–±–∞–ª—å–Ω–æ..."
run_cmd npm install -g typescript tsc-alias

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ–∞–π—Ä–≤–æ–ª
echo "üî• –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..."
run_cmd ufw allow 22/tcp
run_cmd ufw allow 80/tcp
run_cmd ufw --force enable

echo "‚úÖ Node.js –≤–µ—Ä—Å–∏—è: $(node -v)"
echo "‚úÖ npm –≤–µ—Ä—Å–∏—è: $(npm -v)"
echo "‚úÖ TypeScript –≤–µ—Ä—Å–∏—è: $(tsc -v)"

# –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
if ! id "rentadmin" &>/dev/null; then
    echo "üë§ –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è rentadmin..."
    run_cmd useradd -m -s /bin/bash rentadmin
fi

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π..."
run_cmd mkdir -p /var/www/html/rentadmin
run_cmd mkdir -p /opt/rentadmin
run_cmd mkdir -p /var/log/rentadmin

# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–æ–µ–∫—Ç
echo "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
run_cmd cp -r . /opt/rentadmin/
run_cmd chown -R rentadmin:rentadmin /opt/rentadmin
run_cmd chown -R rentadmin:rentadmin /var/www/html/rentadmin
run_cmd chown -R rentadmin:rentadmin /var/log/rentadmin

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –ø—Ä–æ–µ–∫—Ç–∞
cd /opt/rentadmin

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –±—ç–∫–µ–Ω–¥
echo "üéØ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±—ç–∫–µ–Ω–¥–∞..."
cd backend

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±—ç–∫–µ–Ω–¥–∞..."
sudo -u rentadmin npm install

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è SQLite
echo "üóÑÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sudo -u rentadmin tee knexfile.js > /dev/null << 'EOF'
require('dotenv').config();

const config = {
    development: {
        client: 'sqlite3',
        connection: {
            filename: './dev.sqlite3'
        },
        useNullAsDefault: true,
        migrations: {
            directory: './src/migrations',
        },
        seeds: {
            directory: './src/seeds',
        },
    },
    production: {
        client: 'sqlite3',
        connection: {
            filename: '/opt/rentadmin/backend/production.sqlite3'
        },
        useNullAsDefault: true,
        migrations: {
            directory: './src/migrations',
        },
        seeds: {
            directory: './src/seeds',
        },
    },
};

module.exports = config;
EOF

# –°–æ–±–∏—Ä–∞–µ–º –±—ç–∫–µ–Ω–¥
echo "üî® –°–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞..."
sudo -u rentadmin npm run build

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–ª—è production
echo "üìä –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sudo -u rentadmin NODE_ENV=production npm run db:migrate

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
cd ../frontend

echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ package.json –∏ —Å–∫—Ä–∏–ø—Ç–æ–≤
if [ ! -f "package.json" ]; then
    echo "‚ùå package.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–µ"
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º production –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é API
sudo -u rentadmin tee .env.production > /dev/null << EOF
VITE_API_URL=http://$SERVER_IP/api
NODE_ENV=production
EOF

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
sudo -u rentadmin npm install

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ build —Å–∫—Ä–∏–ø—Ç–∞
if npm run | grep -q "build"; then
    echo "üî® –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
    sudo -u rentadmin npm run build

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–±–æ—Ä–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ
    if [ -d "dist" ]; then
        echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"
        # –ö–æ–ø–∏—Ä—É–µ–º —Å–æ–±—Ä–∞–Ω–Ω—ã–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ –≤ nginx
        echo "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –≤ nginx..."
        run_cmd cp -r dist/* /var/www/html/rentadmin/
    else
        echo "‚ùå –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –Ω–µ —Å–æ–∑–¥–∞–ª–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é dist"
        exit 1
    fi
else
    echo "‚ùå Build —Å–∫—Ä–∏–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ package.json"
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–∫—Ä–∏–ø—Ç—ã:"
    sudo -u rentadmin npm run
    exit 1
fi

# –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º nginx
echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nginx..."
cd /opt/rentadmin

# –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
run_cmd cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.backup

# –ö–æ–ø–∏—Ä—É–µ–º –Ω–∞—à—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
run_cmd cp nginx-cloud-http.conf /etc/nginx/nginx.conf

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx..."
if run_cmd nginx -t; then
    echo "‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è nginx –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ nginx, –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—É—é"
    run_cmd cp /etc/nginx/nginx.conf.backup /etc/nginx/nginx.conf
    exit 1
fi

# –°–æ–∑–¥–∞–µ–º systemd —Å–µ—Ä–≤–∏—Å –¥–ª—è –±—ç–∫–µ–Ω–¥–∞
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
run_cmd tee /etc/systemd/system/rentadmin.service > /dev/null << EOF
[Unit]
Description=RentAdmin Backend
After=network.target

[Service]
Type=simple
User=rentadmin
WorkingDirectory=/opt/rentadmin/backend
Environment=NODE_ENV=production
Environment=PORT=3001
Environment=JWT_SECRET=super-secret-jwt-key-for-rent-admin-production-2024
Environment=PIN_CODE=20031997
Environment=CORS_ORIGIN=*
ExecStart=/usr/bin/npm start
Restart=on-failure
RestartSec=5
StandardOutput=append:/var/log/rentadmin/backend.log
StandardError=append:/var/log/rentadmin/backend-error.log

[Install]
WantedBy=multi-user.target
EOF

# –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º systemd –∏ –∑–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–∏—Å—ã
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
run_cmd systemctl daemon-reload
run_cmd systemctl enable rentadmin
run_cmd systemctl start rentadmin
run_cmd systemctl enable nginx
run_cmd systemctl restart nginx

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
echo ""
echo "üìä –°–¢–ê–¢–£–° –°–ï–†–í–ò–°–û–í:"
echo "=================="

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ç–∫–µ–Ω–¥
if systemctl is-active --quiet rentadmin; then
    echo "‚úÖ Backend: –†–ê–ë–û–¢–ê–ï–¢"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º API
    if curl -s http://localhost:3001/api/health > /dev/null; then
        echo "‚úÖ API: –î–û–°–¢–£–ü–ï–ù"
    else
        echo "‚ö†Ô∏è API: –ù–ï –û–¢–í–ï–ß–ê–ï–¢"
    fi
else
    echo "‚ùå Backend: –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
    echo "–õ–æ–≥–∏: journalctl -u rentadmin -n 20"
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º nginx
if systemctl is-active --quiet nginx; then
    echo "‚úÖ Nginx: –†–ê–ë–û–¢–ê–ï–¢"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
    if curl -s http://localhost/ > /dev/null; then
        echo "‚úÖ Frontend: –î–û–°–¢–£–ü–ï–ù"
    else
        echo "‚ö†Ô∏è Frontend: –ù–ï –û–¢–í–ï–ß–ê–ï–¢"
    fi
else
    echo "‚ùå Nginx: –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
    echo "–õ–æ–≥–∏: journalctl -u nginx -n 20"
fi

echo ""
echo "üéâ –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo "=========================="
echo ""
echo "üåç –î–û–°–¢–£–ü –ö –ü–†–ò–õ–û–ñ–ï–ù–ò–Æ:"
echo "üì± –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://$SERVER_IP/"
echo "üéØ API: http://$SERVER_IP/api"
echo "üè• Health check: http://$SERVER_IP/health"
echo ""
echo "üîß –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê:"
echo "üìä –°—Ç–∞—Ç—É—Å: systemctl status rentadmin nginx"
echo "üìã –õ–æ–≥–∏ –±—ç–∫–µ–Ω–¥–∞: journalctl -u rentadmin -f"
echo "üìã –õ–æ–≥–∏ nginx: tail -f /var/log/nginx/error.log"
echo "üß™ –¢–µ—Å—Ç API: curl http://$SERVER_IP/api/health"
echo "üß™ –¢–µ—Å—Ç —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞: curl -I http://$SERVER_IP/"
echo ""

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "üîç –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:"
echo "====================="

# –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoints
echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API..."
API_RESPONSE=$(curl -s http://localhost:3001/api/health 2>/dev/null)
if [ ! -z "$API_RESPONSE" ]; then
    echo "‚úÖ –ü—Ä—è–º–æ–π API —Ä–∞–±–æ—Ç–∞–µ—Ç: $API_RESPONSE"
else
    echo "‚ùå –ü—Ä—è–º–æ–π API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

echo "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∫—Å–∏..."
PROXY_RESPONSE=$(curl -s http://localhost/api/health 2>/dev/null)
if [ ! -z "$PROXY_RESPONSE" ]; then
    echo "‚úÖ –ü—Ä–æ–∫—Å–∏ API —Ä–∞–±–æ—Ç–∞–µ—Ç: $PROXY_RESPONSE"
else
    echo "‚ùå –ü—Ä–æ–∫—Å–∏ API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
fi

echo ""
echo "üéä –ì–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä–æ–π—Ç–µ http://$SERVER_IP/ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"