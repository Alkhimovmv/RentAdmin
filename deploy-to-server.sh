#!/bin/bash

# ==========================================
# RentAdmin Production Deployment Script
# –î–ª—è —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è –Ω–∞ cloud.ru VM (87.242.103.146)
# ==========================================

set -e  # –í—ã–π—Ç–∏ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

info() {
    echo -e "${BLUE}[INFO] $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–æ–≤
check_sudo() {
    if ! sudo -n true 2>/dev/null; then
        warn "–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Ç—Ä–µ–±—É—é—Ç –ø—Ä–∞–≤ sudo. –í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏."
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose
install_docker() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose..."

    # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã
    sudo apt update && sudo apt upgrade -y

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    sudo apt install -y apt-transport-https ca-certificates curl gnupg lsb-release git

    # –ü—Ä–æ–≤–µ—Ä–∫–∞, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏ —É–∂–µ Docker
    if command -v docker &> /dev/null; then
        info "Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker --version)"
    else
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–≥–æ GPG –∫–ª—é—á–∞ Docker
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è Docker
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker
        sudo apt update
        sudo apt install -y docker-ce docker-ce-cli containerd.io

        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É docker
        sudo usermod -aG docker $USER

        log "Docker —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose
    if command -v docker-compose &> /dev/null; then
        info "Docker Compose —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $(docker-compose --version)"
    else
        # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker Compose
        sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose

        log "Docker Compose —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
    fi

    # –ó–∞–ø—É—Å–∫ Docker —Å–µ—Ä–≤–∏—Å–∞
    sudo systemctl enable docker
    sudo systemctl start docker
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
configure_firewall() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..."

    # –í–∫–ª—é—á–µ–Ω–∏–µ UFW
    sudo ufw --force enable

    # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ SSH
    sudo ufw allow ssh
    sudo ufw allow 22

    # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ HTTP –∏ HTTPS
    sudo ufw allow 80
    sudo ufw allow 443

    # –†–∞–∑—Ä–µ—à–µ–Ω–∏–µ backend –ø–æ—Ä—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
    sudo ufw allow 3001

    # –ü—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª
    sudo ufw reload

    info "–§–∞–π—Ä–≤–æ–ª –Ω–∞—Å—Ç—Ä–æ–µ–Ω. –û—Ç–∫—Ä—ã—Ç—ã –ø–æ—Ä—Ç—ã: 22, 80, 443, 3001"
}

# –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
setup_project() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞..."

    PROJECT_DIR="/opt/rentadmin"

    if [ -d "$PROJECT_DIR" ]; then
        warn "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è $PROJECT_DIR —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ..."
        cd $PROJECT_DIR

        # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º—ã —Å –≤–ª–∞–¥–µ–Ω–∏–µ–º git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
        if [ -d ".git" ]; then
            log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ git –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
            sudo git config --global --add safe.directory $PROJECT_DIR
            sudo chown -R $USER:$USER .git

            # –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
            if git pull origin main 2>/dev/null; then
                log "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω"
            else
                warn "–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–æ–≤–∏—Ç—å —á–µ—Ä–µ–∑ git pull. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã."
            fi
        else
            log "Git —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã"
        fi
    else
        log "–°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞..."
        sudo mkdir -p $PROJECT_DIR
        sudo chown -R $USER:$USER $PROJECT_DIR

        info "–î–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:"
        info "cd $PROJECT_DIR"
        info "git clone <your-repo-url> ."
        info "–ó–∞—Ç–µ–º –∑–∞–ø—É—Å—Ç–∏—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–Ω–æ–≤–∞."

        # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –∏–∑ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        if [ -f "docker-compose.yml" ]; then
            log "–ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–æ–µ–∫—Ç–∞..."
            sudo cp -r . $PROJECT_DIR/
            sudo chown -R $USER:$USER $PROJECT_DIR
        fi
    fi

    cd $PROJECT_DIR
}

# –°–±–æ—Ä–∫–∞ frontend
build_frontend() {
    log "–°–±–æ—Ä–∫–∞ frontend..."

    if [ ! -d "frontend" ]; then
        error "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è frontend –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
    fi

    cd frontend

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–≥–æ package.json
    if ! grep -q '"build"' package.json 2>/dev/null; then
        error "–í package.json –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Å–∫—Ä–∏–ø—Ç build. –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./fix-project-files.sh –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    if [ ! -f "tsconfig.app.json" ] || [ ! -f "tsconfig.node.json" ]; then
        warn "–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç TypeScript –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã. –ó–∞–ø—É—Å—Ç–∏—Ç–µ ./fix-project-files.sh –¥–ª—è –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è."
        error "–ù–µ–≤–æ–∑–º–æ–∂–Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –±–µ–∑ tsconfig.app.json –∏ tsconfig.node.json"
    fi

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
    if ! command -v node &> /dev/null; then
        log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node.js..."
        curl -fsSL https://deb.nodesource.com/setup_18.x | sudo -E bash -
        sudo apt-get install -y nodejs
    fi

    # –û—á–∏—Å—Ç–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–ª—è node_modules
    if [ -d "node_modules" ]; then
        log "–û—á–∏—Å—Ç–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö node_modules..."
        sudo rm -rf node_modules
        sudo rm -f package-lock.json
    fi

    # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞
    sudo chown -R $USER:$USER .

    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    log "–î–æ—Å—Ç—É–ø–Ω—ã–µ npm —Å–∫—Ä–∏–ø—Ç—ã:"
    npm run

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    npm install

    # –°–±–æ—Ä–∫–∞ –¥–ª—è production
    VITE_API_URL=/api npm run build

    cd ..
    log "Frontend —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ!"
}

# –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
prepare_database() {
    log "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."

    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –¥–∞–Ω–Ω—ã—Ö
    mkdir -p data

    # –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –ë–î –∏–ª–∏ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π
    if [ -f "backend/dev.sqlite3" ]; then
        cp backend/dev.sqlite3 data/production.sqlite3
        info "–°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"
    else
        touch data/production.sqlite3
        info "–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"
    fi

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤
    chmod 664 data/production.sqlite3
}

# –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
start_application() {
    log "–ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."

    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
    docker-compose down 2>/dev/null || true

    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –æ–±—Ä–∞–∑–æ–≤
    docker system prune -f

    # –°–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫
    docker-compose up --build -d

    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    sleep 10
    docker-compose ps

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."

    # –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞
    for i in {1..30}; do
        if curl -f http://localhost/health &>/dev/null; then
            log "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–æ –∏ –¥–æ—Å—Ç—É–ø–Ω–æ!"
            break
        fi
        if [ $i -eq 30 ]; then
            error "‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –ø–æ—Å–ª–µ 30 –ø–æ–ø—ã—Ç–æ–∫"
        fi
        echo -n "."
        sleep 2
    done
}

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–∏
show_deployment_info() {
    log "=== –ò–ù–§–û–†–ú–ê–¶–ò–Ø –û –†–ê–ó–í–ï–†–¢–´–í–ê–ù–ò–ò ==="
    echo ""
    info "üåê –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://87.242.103.146"
    info "üîß API –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É: http://87.242.103.146/api"
    info "üè• Health check: http://87.242.103.146/health"
    echo ""
    info "üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏:"
    info "   –°—Ç–∞—Ç—É—Å:     docker-compose ps"
    info "   –õ–æ–≥–∏:       docker-compose logs -f"
    info "   –û—Å—Ç–∞–Ω–æ–≤–∫–∞:  docker-compose down"
    info "   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: docker-compose restart"
    echo ""
    info "üîê –î–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞:"
    info "   PIN-–∫–æ–¥: 20031997"
    echo ""
    warn "üîí –ù–µ –∑–∞–±—É–¥—å—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å JWT_SECRET –∏ PIN_CODE –≤ production!"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    log "üöÄ –ù–∞—á–∞–ª–æ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è RentAdmin –Ω–∞ cloud.ru"
    echo ""

    check_sudo
    install_docker
    configure_firewall
    setup_project
    build_frontend
    prepare_database
    start_application
    show_deployment_info

    log "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–µ—Ä—ã–≤–∞–Ω–∏—è
trap 'error "–†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"' INT

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main