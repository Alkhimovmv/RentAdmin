version: '3.8'

services:
  # PostgreSQL database
  database:
    image: postgres:15-alpine
    container_name: rent-admin-db
    environment:
      POSTGRES_DB: rent_admin
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - rent-admin-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: rent-admin-backend
    environment:
      NODE_ENV: production
      PORT: 3001
      DB_HOST: database
      DB_PORT: 5432
      DB_NAME: rent_admin
      DB_USER: postgres
      DB_PASSWORD: password
      JWT_SECRET: super-secret-jwt-key-for-rent-admin-2024
      PIN_CODE: 20031997
      CORS_ORIGIN: https://vozmimenjaadmin.netlify.app
    ports:
      - "3001:3001"
    depends_on:
      database:
        condition: service_healthy
    networks:
      - rent-admin-network
    volumes:
      - ./backend/src/migrations:/app/src/migrations
      - ./backend/src/seeds:/app/src/seeds
    command: sh -c "npm run db:migrate && npm start"
    restart: unless-stopped

  # Frontend application (отключен - используется Netlify)
  # frontend:
  #   build:
  #     context: ./frontend
  #     dockerfile: Dockerfile
  #   container_name: rent-admin-frontend
  #   ports:
  #     - "3000:80"
  #   depends_on:
  #     - backend
  #   networks:
  #     - rent-admin-network
  #   restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  rent-admin-network:
    driver: bridge