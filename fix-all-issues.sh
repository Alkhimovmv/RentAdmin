#!/bin/bash

echo "üîß –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è"
echo "==============================================="

SERVER_IP="87.242.103.146"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sudo systemctl stop rentadmin 2>/dev/null || true
sudo systemctl stop nginx

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ npm –ø—Ä–æ–±–ª–µ–º - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
echo "üì¶ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ npm –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ dev –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
cd /opt/rentadmin/backend

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –≤–∫–ª—é—á–∞—è dev
sudo -u rentadmin npm install

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ —Ç–∏–ø—ã
echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏—Ö —Ç–∏–ø–æ–≤..."
sudo -u rentadmin npm install --save-dev @types/express @types/cors @types/jsonwebtoken @types/jest

# –ö–æ–ø–∏—Ä—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—É—é nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
echo "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
sudo cp /home/maxim/RentAdmin/nginx-simple.conf /opt/rentadmin/

# –ö–æ–º–ø–∏–ª—è—Ü–∏—è –±–µ–∑ —Ç–∏–ø–æ–≤ (–¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞–ø—É—Å–∫–∞)
echo "üî® –ë—ã—Å—Ç—Ä–∞—è —Å–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞ (–∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ —Ç–∏–ø–æ–≤)..."
sudo -u rentadmin npx tsc --noEmit false --skipLibCheck true

# –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –∫–æ–ø–∏—Ä—É–µ–º JS —Ñ–∞–π–ª—ã –Ω–∞–ø—Ä—è–º—É—é
if [ ! -d "dist" ]; then
    echo "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∏—Å—Ö–æ–¥–Ω–∏–∫–æ–≤ –∫–∞–∫ –µ—Å—Ç—å..."
    sudo -u rentadmin mkdir -p dist
    sudo -u rentadmin cp -r src/* dist/
    # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º .ts –≤ .js
    sudo -u rentadmin find dist -name "*.ts" -exec sh -c 'mv "$1" "${1%.ts}.js"' _ {} \;
fi

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ - –ø–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –≤–µ—Ä—Å–∏—é
echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
cd /home/maxim/RentAdmin/frontend

# –°–æ–∑–¥–∞–µ–º .env.production
tee .env.production > /dev/null << EOF
VITE_API_URL=http://$SERVER_IP/api
NODE_ENV=production
EOF

# –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo "üî® –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
npm run build

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é nginx –∏ –∫–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã
echo "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞..."
sudo mkdir -p /var/www/html/rentadmin
sudo cp -r dist/* /var/www/html/rentadmin/
sudo chown -R www-data:www-data /var/www/html/rentadmin

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nginx
echo "üåê –ù–∞—Å—Ç—Ä–æ–π–∫–∞ nginx..."
cd /home/maxim/RentAdmin
sudo cp nginx-simple.conf /etc/nginx/nginx.conf

# –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx
if ! sudo nginx -t; then
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å nginx, –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–∏–Ω–∏–º–∞–ª—å–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    sudo tee /etc/nginx/nginx.conf > /dev/null << 'EOF'
user www-data;
worker_processes auto;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    upstream backend {
        server 127.0.0.1:3001;
    }

    server {
        listen 80 default_server;
        server_name _;
        root /var/www/html/rentadmin;
        index index.html;

        location /api/ {
            proxy_pass http://backend/api/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location /health {
            proxy_pass http://backend/api/health;
        }

        location / {
            try_files $uri $uri/ /index.html;
        }
    }
}
EOF
    sudo nginx -t
fi

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞ –±—ç–∫–µ–Ω–¥–∞
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
sudo tee /etc/systemd/system/rentadmin.service > /dev/null << EOF
[Unit]
Description=RentAdmin Backend
After=network.target

[Service]
Type=simple
User=rentadmin
WorkingDirectory=/opt/rentadmin/backend
Environment=NODE_ENV=production
Environment=PORT=3001
Environment=JWT_SECRET=super-secret-jwt-key
Environment=PIN_CODE=20031997
Environment=CORS_ORIGIN=*
ExecStart=/usr/bin/node dist/server.js
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ä–∞–±–æ—Ç–∞—é—â–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
echo "üéØ –°–æ–∑–¥–∞–Ω–∏–µ —É–ø—Ä–æ—â–µ–Ω–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞..."
sudo -u rentadmin tee /opt/rentadmin/backend/dist/server.js > /dev/null << 'EOFJS'
const express = require('express');
const path = require('path');

const app = express();
const PORT = process.env.PORT || 3001;

// Middleware
app.use(express.json());

// CORS
app.use((req, res, next) => {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');

    if (req.method === 'OPTIONS') {
        res.sendStatus(200);
    } else {
        next();
    }
});

// Health check
app.get('/api/health', (req, res) => {
    res.json({
        status: 'OK',
        timestamp: new Date().toISOString(),
        environment: process.env.NODE_ENV || 'production',
        port: PORT
    });
});

// Login endpoint (–∑–∞–≥–ª—É—à–∫–∞)
app.post('/api/auth/login', (req, res) => {
    const { password } = req.body;

    if (password === '20031997') {
        res.json({
            success: true,
            token: 'demo-token-' + Date.now(),
            message: '–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è'
        });
    } else {
        res.status(401).json({
            success: false,
            message: '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å'
        });
    }
});

// API endpoints (–∑–∞–≥–ª—É—à–∫–∏)
app.get('/api/rentals', (req, res) => {
    res.json({ data: [], total: 0 });
});

app.get('/api/customers', (req, res) => {
    res.json({ data: [], total: 0 });
});

app.get('/api/equipment', (req, res) => {
    res.json({ data: [], total: 0 });
});

app.get('/api/expenses', (req, res) => {
    res.json({ data: [], total: 0 });
});

app.get('/api/analytics/dashboard', (req, res) => {
    res.json({
        totalRentals: 0,
        totalRevenue: 0,
        activeRentals: 0,
        totalCustomers: 0
    });
});

// Catch-all
app.use('*', (req, res) => {
    res.status(404).json({ error: 'Endpoint not found' });
});

app.listen(PORT, '0.0.0.0', () => {
    console.log(`Server running on port ${PORT}`);
    console.log(`Environment: ${process.env.NODE_ENV}`);
    console.log(`CORS origin: ${process.env.CORS_ORIGIN}`);
});
EOFJS

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sudo systemctl daemon-reload
sudo systemctl enable rentadmin nginx
sudo systemctl start rentadmin
sudo systemctl start nginx

# –û–∂–∏–¥–∞–Ω–∏–µ
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞..."
sleep 8

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo ""
echo "üìä –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:"
echo "====================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
if sudo systemctl is-active --quiet rentadmin; then
    echo "‚úÖ Backend: –ó–ê–ü–£–©–ï–ù"
else
    echo "‚ùå Backend: –ù–ï –ó–ê–ü–£–©–ï–ù"
    echo "–õ–æ–≥–∏:"
    sudo journalctl -u rentadmin -n 5 --no-pager
fi

if sudo systemctl is-active --quiet nginx; then
    echo "‚úÖ Nginx: –ó–ê–ü–£–©–ï–ù"
else
    echo "‚ùå Nginx: –ù–ï –ó–ê–ü–£–©–ï–ù"
fi

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
echo ""
echo "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API:"
sleep 2

if curl -s http://localhost:3001/api/health > /dev/null; then
    echo "‚úÖ –ü—Ä—è–º–æ–π API —Ä–∞–±–æ—Ç–∞–µ—Ç:"
    curl -s http://localhost:3001/api/health | head -3
else
    echo "‚ùå –ü—Ä—è–º–æ–π API –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo ""
if curl -s http://localhost/api/health > /dev/null; then
    echo "‚úÖ API —á–µ—Ä–µ–∑ nginx —Ä–∞–±–æ—Ç–∞–µ—Ç:"
    curl -s http://localhost/api/health | head -3
else
    echo "‚ùå API —á–µ—Ä–µ–∑ nginx –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
fi

echo ""
if curl -s http://localhost/ | grep -q "html"; then
    echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è"
else
    echo "‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è"
fi

echo ""
echo "üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo ""
echo "üåç –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –ø–æ –∞–¥—Ä–µ—Å—É:"
echo "üì± http://$SERVER_IP/"
echo "üéØ http://$SERVER_IP/api"
echo "üè• http://$SERVER_IP/health"
echo ""
echo "üîß –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:"
echo "sudo systemctl status rentadmin nginx"
echo "sudo journalctl -u rentadmin -f"
echo ""
echo "üí° –õ–æ–≥–∏–Ω: –ø–∞—Ä–æ–ª—å 20031997"