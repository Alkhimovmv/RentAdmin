#!/bin/bash

# –ü–æ–ª–Ω–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –Ω–∞ VM
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω—ã–π nginx –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

set -e

echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –Ω–∞ VM"
echo "=============================================="
echo ""

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏—è –ø–æ—Ä—Ç–∞ 80
free_port_80() {
    echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 80..."

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π nginx
    if systemctl is-active --quiet nginx 2>/dev/null; then
        echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω —Å–∏—Å—Ç–µ–º–Ω—ã–π nginx, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        sudo systemctl stop nginx
        sudo systemctl disable nginx 2>/dev/null || true
        echo "‚úÖ –°–∏—Å—Ç–µ–º–Ω—ã–π nginx –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Apache
    if systemctl is-active --quiet apache2 2>/dev/null; then
        echo "‚ö†Ô∏è  –ù–∞–π–¥–µ–Ω Apache, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        sudo systemctl stop apache2
        sudo systemctl disable apache2 2>/dev/null || true
        echo "‚úÖ Apache –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ—Ä—Ç —Å–≤–æ–±–æ–¥–µ–Ω
    if sudo lsof -i :80 >/dev/null 2>&1; then
        echo "‚ö†Ô∏è  –ü–æ—Ä—Ç 80 –≤—Å—ë –µ—â—ë –∑–∞–Ω—è—Ç, –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ—Å–≤–æ–±–æ–∂–¥–∞–µ–º..."
        sudo lsof -ti :80 | xargs -r sudo kill -9 2>/dev/null || true
        sleep 2
    fi

    echo "‚úÖ –ü–æ—Ä—Ç 80 —Å–≤–æ–±–æ–¥–µ–Ω"
}

# 1. –û—Å–≤–æ–±–æ–∂–¥–∞–µ–º –ø–æ—Ä—Ç 80
free_port_80
echo ""

# 2. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
docker stop rentadmin_nginx 2>/dev/null || true
docker rm rentadmin_nginx 2>/dev/null || true
echo "‚úÖ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
echo ""

# 3. –û—á–∏—Å—Ç–∫–∞ –∏ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ frontend
echo "üåê –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ frontend..."
cd frontend
rm -rf dist/ node_modules/.vite/

NODE_ENV=production npm run build

if [ ! -f "dist/index.html" ]; then
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ frontend"
    exit 1
fi

NEW_HASH=$(ls dist/assets/index-*.js | xargs basename)
echo "‚úÖ Frontend —Å–æ–±—Ä–∞–Ω: $NEW_HASH"
cd ..
echo ""

# 4. –ó–∞–ø—É—Å–∫ nginx
echo "üê≥ –ó–∞–ø—É—Å–∫ nginx..."
docker-compose -f docker-compose.host.yml up -d

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ nginx (–¥–æ 30 —Å–µ–∫—É–Ω–¥)..."
for i in {1..30}; do
    if docker ps --filter "name=rentadmin_nginx" --filter "status=running" | grep -q rentadmin && \
       curl -s http://localhost/ >/dev/null 2>&1; then
        echo "‚úÖ Nginx –∑–∞–ø—É—â–µ–Ω –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
        break
    fi

    if [ $i -eq 30 ]; then
        echo "‚ùå Nginx –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ 30 —Å–µ–∫—É–Ω–¥"
        echo "üìã –õ–æ–≥–∏ Docker:"
        docker logs rentadmin_nginx --tail 30
        exit 1
    fi
    sleep 1
done

echo ""

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞
echo "‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
SERVED_HASH=$(curl -s http://localhost/ | grep -o 'index-[^.]*\.js' | head -1)
echo "üì¶ Nginx —Ä–∞–∑–¥–∞–µ—Ç: $SERVED_HASH"

if [ "$SERVED_HASH" = "$NEW_HASH" ]; then
    echo "‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!"
else
    echo "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: –•–µ—à–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç"
    echo "   –°–æ–±—Ä–∞–Ω: $NEW_HASH"
    echo "   –†–∞–∑–¥–∞–µ—Ç—Å—è: $SERVED_HASH"
fi

echo ""
echo "üéâ –†–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "üìç –û—Ç–∫—Ä–æ–π—Ç–µ: http://87.242.103.146"
echo "üîë –û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞: Ctrl+F5"
echo ""
echo "üìù –í –∫–æ–Ω—Å–æ–ª–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:"
echo "   üîß Production mode: using fixed API URL: http://87.242.103.146/api"
echo ""
