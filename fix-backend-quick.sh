#!/bin/bash

echo "‚ö° –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—ç–∫–µ–Ω–¥–∞"
echo "============================="

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—ç–∫–µ–Ω–¥–∞
sudo systemctl stop rentadmin 2>/dev/null || true

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞
echo "üéØ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ —Ä–∞–±–æ—á–µ–≥–æ –±—ç–∫–µ–Ω–¥–∞..."
sudo -u rentadmin mkdir -p /opt/rentadmin/backend/dist

sudo -u rentadmin tee /opt/rentadmin/backend/dist/server.js > /dev/null << 'EOF'
const express = require('express');
const app = express();
const PORT = 3001;

app.use(express.json());

// CORS
app.use((req, res, next) => {
    res.header('Access-Control-Allow-Origin', '*');
    res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
    res.header('Access-Control-Allow-Headers', 'Origin, X-Requested-With, Content-Type, Accept, Authorization');
    if (req.method === 'OPTIONS') {
        res.sendStatus(200);
    } else {
        next();
    }
});

// Health check
app.get('/api/health', (req, res) => {
    res.json({
        status: 'OK',
        timestamp: new Date().toISOString(),
        environment: 'production',
        message: 'RentAdmin Backend is running'
    });
});

// Login
app.post('/api/auth/login', (req, res) => {
    const { password } = req.body;
    if (password === '20031997') {
        res.json({
            success: true,
            token: 'demo-token-' + Date.now(),
            message: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞'
        });
    } else {
        res.status(401).json({ success: false, message: '–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å' });
    }
});

// –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è API
app.get('/api/rentals', (req, res) => res.json({ data: [], total: 0 }));
app.get('/api/customers', (req, res) => res.json({ data: [], total: 0 }));
app.get('/api/equipment', (req, res) => res.json({ data: [], total: 0 }));
app.get('/api/expenses', (req, res) => res.json({ data: [], total: 0 }));
app.get('/api/analytics/dashboard', (req, res) => res.json({
    totalRentals: 0, totalRevenue: 0, activeRentals: 0, totalCustomers: 0
}));

app.listen(PORT, '0.0.0.0', () => {
    console.log(`üöÄ RentAdmin Backend started on port ${PORT}`);
});
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞
sudo tee /etc/systemd/system/rentadmin.service > /dev/null << 'EOF'
[Unit]
Description=RentAdmin Backend
After=network.target

[Service]
Type=simple
User=rentadmin
WorkingDirectory=/opt/rentadmin/backend
ExecStart=/usr/bin/node dist/server.js
Restart=on-failure
RestartSec=3

[Install]
WantedBy=multi-user.target
EOF

# –ó–∞–ø—É—Å–∫
echo "üöÄ –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞..."
sudo systemctl daemon-reload
sudo systemctl enable rentadmin
sudo systemctl start rentadmin

sleep 3

# –ü—Ä–æ–≤–µ—Ä–∫–∞
if sudo systemctl is-active --quiet rentadmin; then
    echo "‚úÖ Backend –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
    if curl -s http://localhost:3001/api/health > /dev/null; then
        echo "‚úÖ API –æ—Ç–≤–µ—á–∞–µ—Ç:"
        curl -s http://localhost:3001/api/health
    fi
else
    echo "‚ùå Backend –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    sudo journalctl -u rentadmin -n 10 --no-pager
fi

echo ""
echo "üéØ –ì–æ—Ç–æ–≤–æ! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ: http://87.242.103.146/"