#!/bin/bash

# –ë—ã—Å—Ç—Ä–æ–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è
echo "üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏—è RentAdmin"
echo "==============================================="
echo ""

SERVER_IP="87.242.103.146"

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sudo systemctl stop rentadmin 2>/dev/null || true
sudo systemctl stop nginx

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ npm
echo "üì¶ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–ª–∏–∫—Ç–∞ npm..."
sudo apt remove -y npm 2>/dev/null || true
sudo apt install -y npm
sudo npm install -g typescript tsc-alias

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ knexfile –¥–ª—è SQLite
echo "üóÑÔ∏è –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sudo tee /opt/rentadmin/backend/knexfile.js > /dev/null << 'EOF'
require('dotenv').config();

const config = {
    development: {
        client: 'sqlite3',
        connection: {
            filename: './dev.sqlite3'
        },
        useNullAsDefault: true,
        migrations: {
            directory: './src/migrations',
        },
        seeds: {
            directory: './src/seeds',
        },
    },
    production: {
        client: 'sqlite3',
        connection: {
            filename: '/opt/rentadmin/backend/production.sqlite3'
        },
        useNullAsDefault: true,
        migrations: {
            directory: './src/migrations',
        },
        seeds: {
            directory: './src/seeds',
        },
    },
};

module.exports = config;
EOF

# –°–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞
echo "üî® –°–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞..."
cd /opt/rentadmin/backend
sudo -u rentadmin npm run build

# –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
echo "üìä –°–æ–∑–¥–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sudo -u rentadmin NODE_ENV=production npm run db:migrate

# –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo "üåê –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
cd /opt/rentadmin/frontend

# –°–æ–∑–¥–∞–Ω–∏–µ .env.production
sudo -u rentadmin tee .env.production > /dev/null << EOF
VITE_API_URL=http://$SERVER_IP/api
NODE_ENV=production
EOF

sudo -u rentadmin npm run build
sudo cp -r dist/* /var/www/html/rentadmin/

# –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
echo "üåê –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ nginx..."
sudo cp /opt/rentadmin/nginx-cloud-http.conf /etc/nginx/nginx.conf

# –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx
if sudo nginx -t; then
    echo "‚úÖ nginx –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞"
else
    echo "‚ùå –ü—Ä–æ–±–ª–µ–º–∞ —Å nginx"
    exit 1
fi

# –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞
echo "üîß –°–æ–∑–¥–∞–Ω–∏–µ systemd —Å–µ—Ä–≤–∏—Å–∞..."
sudo tee /etc/systemd/system/rentadmin.service > /dev/null << EOF
[Unit]
Description=RentAdmin Backend
After=network.target

[Service]
Type=simple
User=rentadmin
WorkingDirectory=/opt/rentadmin/backend
Environment=NODE_ENV=production
Environment=PORT=3001
Environment=JWT_SECRET=super-secret-jwt-key-for-rent-admin-production-2024
Environment=PIN_CODE=20031997
Environment=CORS_ORIGIN=*
ExecStart=/usr/bin/npm start
Restart=on-failure
RestartSec=5
StandardOutput=append:/var/log/rentadmin/backend.log
StandardError=append:/var/log/rentadmin/backend-error.log

[Install]
WantedBy=multi-user.target
EOF

# –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤
echo "üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–∏—Å–æ–≤..."
sudo systemctl daemon-reload
sudo systemctl enable rentadmin nginx
sudo systemctl start rentadmin
sudo systemctl start nginx

# –û–∂–∏–¥–∞–Ω–∏–µ
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞..."
sleep 10

# –ü—Ä–æ–≤–µ—Ä–∫–∞
echo ""
echo "üìä –ü–†–û–í–ï–†–ö–ê –°–¢–ê–¢–£–°–ê:"
echo "==================="

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞
if sudo systemctl is-active --quiet rentadmin; then
    echo "‚úÖ Backend: –ó–ê–ü–£–©–ï–ù"
else
    echo "‚ùå Backend: –ù–ï –ó–ê–ü–£–©–ï–ù"
    echo "–õ–æ–≥–∏: sudo journalctl -u rentadmin -n 10"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx
if sudo systemctl is-active --quiet nginx; then
    echo "‚úÖ Nginx: –ó–ê–ü–£–©–ï–ù"
else
    echo "‚ùå Nginx: –ù–ï –ó–ê–ü–£–©–ï–ù"
    echo "–õ–æ–≥–∏: sudo journalctl -u nginx -n 10"
fi

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API
echo ""
echo "üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï:"
echo "==============="

# –ü—Ä—è–º–æ–π API
if curl -s http://localhost:3001/api/health > /dev/null; then
    echo "‚úÖ –ü—Ä—è–º–æ–π API: –†–ê–ë–û–¢–ê–ï–¢"
    curl -s http://localhost:3001/api/health
else
    echo "‚ùå –ü—Ä—è–º–æ–π API: –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
fi

echo ""

# API —á–µ—Ä–µ–∑ nginx
if curl -s http://localhost/api/health > /dev/null; then
    echo "‚úÖ API —á–µ—Ä–µ–∑ nginx: –†–ê–ë–û–¢–ê–ï–¢"
    curl -s http://localhost/api/health
else
    echo "‚ùå API —á–µ—Ä–µ–∑ nginx: –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
fi

echo ""

# –§—Ä–æ–Ω—Ç–µ–Ω–¥
if curl -s http://localhost/ | head -5 | grep -q "html"; then
    echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥: –†–ê–ë–û–¢–ê–ï–¢"
else
    echo "‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥: –ù–ï –†–ê–ë–û–¢–ê–ï–¢"
fi

echo ""
echo "üéâ –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!"
echo ""
echo "üåç –î–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é:"
echo "üì± –í–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å: http://$SERVER_IP/"
echo "üéØ API: http://$SERVER_IP/api"
echo "üè• Health: http://$SERVER_IP/health"
echo ""
echo "üîß –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:"
echo "sudo systemctl status rentadmin nginx"
echo "sudo journalctl -u rentadmin -f"