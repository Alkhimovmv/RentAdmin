#!/bin/bash

# –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –Ω–∞ VM —Å –æ—á–∏—Å—Ç–∫–æ–π –∫–µ—à–∞

set -e

echo "üîÑ –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û–ï –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞ –Ω–∞ VM"
echo "============================================"
echo ""

# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx
echo "1Ô∏è‚É£  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx..."
docker stop rentadmin_nginx 2>/dev/null || true
docker rm rentadmin_nginx 2>/dev/null || true
echo "‚úÖ Nginx –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —É–¥–∞–ª–µ–Ω"
echo ""

# 2. –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–π —Å–±–æ—Ä–∫–∏
echo "2Ô∏è‚É£  –û—á–∏—Å—Ç–∫–∞ —Å—Ç–∞—Ä–æ–π —Å–±–æ—Ä–∫–∏..."
cd frontend
rm -rf dist/
rm -rf node_modules/.vite/
echo "‚úÖ –°—Ç–∞—Ä–∞—è —Å–±–æ—Ä–∫–∞ –∏ –∫–µ—à Vite —É–¥–∞–ª–µ–Ω—ã"
echo ""

# 3. –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Å —á–∏—Å—Ç–æ–≥–æ –ª–∏—Å—Ç–∞
echo "3Ô∏è‚É£  –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
echo "üì¶ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
if [ ! -d "node_modules" ]; then
    npm install
fi

echo "üî® –°–±–æ—Ä–∫–∞ –¥–ª—è production..."
NODE_ENV=production npm run build

if [ -f "dist/index.html" ]; then
    echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"
    echo "üìä –†–∞–∑–º–µ—Ä: $(du -sh dist/ | cut -f1)"

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ö–µ—à –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    NEW_HASH=$(ls dist/assets/index-*.js | xargs basename)
    echo "üîë –ù–æ–≤—ã–π —Ö–µ—à —Ñ–∞–π–ª–∞: $NEW_HASH"
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏"
    exit 1
fi

cd ..
echo ""

# 4. –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx —Å –Ω–æ–≤—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
echo "4Ô∏è‚É£  –ó–∞–ø—É—Å–∫ nginx —Å –Ω–æ–≤—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏..."
docker-compose -f docker-compose.host.yml up -d

echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ nginx..."
sleep 3

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ nginx —Ä–∞–±–æ—Ç–∞–µ—Ç (–Ω–µ —Å–º–æ—Ç—Ä–∏–º –Ω–∞ –ª–æ–≥–∏ bind errors - –æ–Ω–∏ –º–æ–≥—É—Ç –±—ã—Ç—å –∏–∑-–∑–∞ retry)
if docker ps --filter "name=rentadmin_nginx" --filter "status=running" | grep -q rentadmin; then
    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ nginx –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã
    if curl -s http://localhost/ > /dev/null 2>&1; then
        echo "‚úÖ Nginx –∑–∞–ø—É—â–µ–Ω —Å –Ω–æ–≤—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏ –∏ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
    else
        echo "‚ö†Ô∏è  Nginx –∑–∞–ø—É—â–µ–Ω, –Ω–æ –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ –∑–∞–ø—Ä–æ—Å—ã"
        echo "üìã –õ–æ–≥–∏ nginx:"
        docker logs rentadmin_nginx --tail 20
    fi
else
    echo "‚ùå Nginx –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
    echo "üìã –õ–æ–≥–∏ nginx:"
    docker logs rentadmin_nginx --tail 20
    exit 1
fi

echo ""

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞
echo "5Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è..."
sleep 2

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ nginx —Ä–∞–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–µ —Ñ–∞–π–ª—ã
SERVED_HASH=$(curl -s http://localhost/ | grep -o 'index-[^.]*\.js' | head -1)
echo "üì¶ Nginx —Ä–∞–∑–¥–∞–µ—Ç: $SERVED_HASH"

if [ "$SERVED_HASH" = "$NEW_HASH" ]; then
    echo "‚úÖ –§–∞–π–ª—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
else
    echo "‚ö†Ô∏è  –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ: nginx –º–æ–∂–µ—Ç —Ä–∞–∑–¥–∞–≤–∞—Ç—å —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã"
    echo "   –û–∂–∏–¥–∞–ª–æ—Å—å: $NEW_HASH"
    echo "   –ü–æ–ª—É—á–µ–Ω–æ: $SERVED_HASH"
fi

echo ""
echo "üéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo ""
echo "‚ö†Ô∏è  –í–ê–ñ–ù–û: –û—á–∏—Å—Ç–∏—Ç–µ –∫–µ—à –±—Ä–∞—É–∑–µ—Ä–∞!"
echo ""
echo "   Chrome/Edge: Ctrl+Shift+Delete ‚Üí –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Ñ–∞–π–ª—ã –≤ –∫–µ—à–µ ‚Üí –û—á–∏—Å—Ç–∏—Ç—å"
echo "   Firefox: Ctrl+Shift+Delete ‚Üí –ö–µ—à ‚Üí –û—á–∏—Å—Ç–∏—Ç—å"
echo "   –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ: Ctrl+F5 (–∂–µ—Å—Ç–∫–∞—è –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞)"
echo ""
echo "üìç –û—Ç–∫—Ä–æ–π—Ç–µ: http://87.242.103.146"
echo "üìù –í –∫–æ–Ω—Å–æ–ª–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å:"
echo "   üîß Production mode: using fixed API URL: http://87.242.103.146/api"
echo ""
