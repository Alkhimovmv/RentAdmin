const express = require('express');
const path = require('path');

const app = express();
const PORT = 3000;

// –ü–æ–ª—É—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π IP
const os = require('os');
const interfaces = os.networkInterfaces();
let localIP = '127.0.0.1';

// –ù–∞—Ö–æ–¥–∏–º –æ—Å–Ω–æ–≤–Ω–æ–π —Å–µ—Ç–µ–≤–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
for (const name of Object.keys(interfaces)) {
  for (const iface of interfaces[name]) {
    if (iface.family === 'IPv4' && !iface.internal && iface.address.startsWith('192.168.')) {
      localIP = iface.address;
      break;
    }
  }
}

// CORS –¥–ª—è –≤—Å–µ—Ö –¥–æ–º–µ–Ω–æ–≤
app.use((req, res, next) => {
  res.header('Access-Control-Allow-Origin', '*');
  res.header('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, OPTIONS');
  res.header('Access-Control-Allow-Headers', 'Authorization, Content-Type, Accept, Origin, X-Requested-With');

  if (req.method === 'OPTIONS') {
    return res.status(200).send();
  }
  next();
});

// Info endpoint —Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–º–∏ URL
app.get('/info', (req, res) => {
  res.json({
    service: 'RentAdmin - –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä',
    localIP: localIP,
    port: PORT,
    access: {
      local: `http://localhost:${PORT}/`,
      network: `http://${localIP}:${PORT}/`,
      mobile: `http://${localIP}:${PORT}/`
    },
    instructions: {
      desktop: `–û—Ç–∫—Ä–æ–π—Ç–µ http://${localIP}:${PORT}/ –≤ –±—Ä–∞—É–∑–µ—Ä–µ`,
      mobile: `–í —Ç–æ–º –∂–µ WiFi –æ—Ç–∫—Ä–æ–π—Ç–µ http://${localIP}:${PORT}/`,
      other_devices: `–ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ WiFi —Å–µ—Ç–∏ –∏ –æ—Ç–∫—Ä–æ–π—Ç–µ http://${localIP}:${PORT}/`
    },
    backend_status: '–ó–∞–ø—É—Å—Ç–∏—Ç–µ backend: cd backend && npm start',
    timestamp: new Date().toISOString()
  });
});

// Health check
app.get('/health', (req, res) => {
  res.json({
    status: 'OK',
    service: 'RentAdmin Frontend',
    localIP: localIP,
    port: PORT,
    timestamp: new Date().toISOString()
  });
});

// –ü—Ä–æ—Å—Ç–æ–π API mock –¥–ª—è –¥–µ–º–æ
app.get('/api/demo', (req, res) => {
  res.json({
    message: 'RentAdmin API —Ä–∞–±–æ—Ç–∞–µ—Ç!',
    server: 'Local Development',
    ip: localIP,
    timestamp: new Date().toISOString(),
    demo_data: {
      tenants: 5,
      properties: 3,
      payments: 12
    }
  });
});

// API endpoints –∑–∞–≥–ª—É—à–∫–∏
app.use('/api', (req, res) => {
  res.status(503).json({
    error: 'Backend –Ω–µ –∑–∞–ø—É—â–µ–Ω',
    message: '–î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ backend',
    command: 'cd backend && npm install && npm run db:migrate && npm start',
    demo_endpoint: `http://${localIP}:${PORT}/api/demo`,
    note: '–§—Ä–æ–Ω—Ç–µ–Ω–¥ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º–µ'
  });
});

// –°—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ñ–∞–π–ª—ã —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
const frontendPath = path.join(process.env.HOME, 'rentadmin-deploy', 'www');
app.use(express.static(frontendPath));

// SPA fallback
app.use((req, res) => {
  const indexPath = path.join(frontendPath, 'index.html');
  res.sendFile(indexPath, (err) => {
    if (err) {
      res.status(404).send(`
        <!DOCTYPE html>
        <html>
        <head>
            <title>RentAdmin - –ù–∞—Å—Ç—Ä–æ–π–∫–∞</title>
            <style>
                body { font-family: Arial, sans-serif; margin: 40px; background: #f5f5f5; }
                .container { background: white; padding: 30px; border-radius: 8px; box-shadow: 0 2px 10px rgba(0,0,0,0.1); }
                h1 { color: #333; }
                .status { background: #fff3cd; border: 1px solid #ffeaa7; padding: 15px; border-radius: 5px; margin: 20px 0; }
                .command { background: #f8f9fa; border-left: 4px solid #007bff; padding: 15px; font-family: monospace; }
                .success { background: #d4edda; border: 1px solid #c3e6cb; color: #155724; }
                .error { background: #f8d7da; border: 1px solid #f5c6cb; color: #721c24; }
                .info { background: #e2f3ff; border: 1px solid #bee5eb; color: #0c5460; }
                ul { padding-left: 20px; }
                li { margin: 8px 0; }
            </style>
        </head>
        <body>
            <div class="container">
                <h1>üè† RentAdmin - –õ–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä</h1>

                <div class="info">
                    <h3>üìç –î–æ—Å—Ç—É–ø –∫ —Å–µ—Ä–≤–µ—Ä—É:</h3>
                    <ul>
                        <li><strong>–õ–æ–∫–∞–ª—å–Ω–æ:</strong> <a href="http://localhost:${PORT}/">http://localhost:${PORT}/</a></li>
                        <li><strong>–ò–∑ —Å–µ—Ç–∏:</strong> <a href="http://${localIP}:${PORT}/">http://${localIP}:${PORT}/</a></li>
                        <li><strong>–° —Ç–µ–ª–µ—Ñ–æ–Ω–∞:</strong> http://${localIP}:${PORT}/</li>
                    </ul>
                </div>

                <div class="status">
                    <h3>‚ö†Ô∏è –§—Ä–æ–Ω—Ç–µ–Ω–¥ –Ω–µ –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω</h3>
                    <p>–î–ª—è —Ä–∞–±–æ—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:</p>
                    <div class="command">./scripts/simple-deploy.sh</div>
                </div>

                <div class="info">
                    <h3>üîß –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç:</h3>
                    <ol>
                        <li>–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥: <code>./scripts/simple-deploy.sh</code></li>
                        <li>–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å —Å–µ—Ä–≤–µ—Ä: <code>./local-start.sh</code></li>
                        <li>–û—Ç–∫—Ä—ã—Ç—å <a href="http://${localIP}:${PORT}/">http://${localIP}:${PORT}/</a></li>
                    </ol>
                </div>

                <div class="info">
                    <h3>üì± –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Å –¥—Ä—É–≥–∏—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤:</h3>
                    <ul>
                        <li>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –≤ –æ–¥–Ω–æ–π WiFi —Å–µ—Ç–∏</li>
                        <li>–û—Ç–∫—Ä–æ–π—Ç–µ: <strong>http://${localIP}:${PORT}/</strong></li>
                        <li>–ï—Å–ª–∏ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π—Ä–≤–æ–ª</li>
                    </ul>
                </div>

                <p><a href="/info">üìä –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ</a> | <a href="/health">‚ù§Ô∏è –°—Ç–∞—Ç—É—Å –∑–¥–æ—Ä–æ–≤—å—è</a></p>
            </div>
        </body>
        </html>
      `);
    }
  });
});

// –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
app.listen(PORT, '0.0.0.0', () => {
  console.log('üéâ RentAdmin –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω!');
  console.log('=====================================');
  console.log('');
  console.log('üåê –î–û–°–¢–£–ü –ö –°–ï–†–í–ï–†–£:');
  console.log(`üìç –õ–æ–∫–∞–ª—å–Ω–æ:    http://localhost:${PORT}/`);
  console.log(`üìç –ò–∑ —Å–µ—Ç–∏:     http://${localIP}:${PORT}/`);
  console.log(`üì± –° —Ç–µ–ª–µ—Ñ–æ–Ω–∞:  http://${localIP}:${PORT}/`);
  console.log('');
  console.log('üìã –ü–û–õ–ï–ó–ù–´–ï –°–°–´–õ–ö–ò:');
  console.log(`‚ÑπÔ∏è  –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:  http://${localIP}:${PORT}/info`);
  console.log(`‚ù§Ô∏è  –ó–¥–æ—Ä–æ–≤—å–µ:    http://${localIP}:${PORT}/health`);
  console.log(`üß™ API –¥–µ–º–æ:     http://${localIP}:${PORT}/api/demo`);
  console.log('');
  console.log('üì± –î–õ–Ø –ú–û–ë–ò–õ–¨–ù–´–• –£–°–¢–†–û–ô–°–¢–í:');
  console.log(`1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Ç–æ–π –∂–µ WiFi —Å–µ—Ç–∏`);
  console.log(`2. –û—Ç–∫—Ä–æ–π—Ç–µ: http://${localIP}:${PORT}/`);
  console.log('');
  console.log('‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞: Ctrl+C');
  console.log('=====================================');
});

console.log('üöÄ –ó–∞–ø—É—Å–∫ –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞...');
console.log(`üì° IP –∞–¥—Ä–µ—Å: ${localIP}`);
console.log(`üîå –ü–æ—Ä—Ç: ${PORT}`);
console.log('');