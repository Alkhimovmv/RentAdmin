#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ RentAdmin –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ
# –£–±–∏–≤–∞–µ—Ç –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã, –ø–µ—Ä–µ—Å–æ–±–∏—Ä–∞–µ—Ç –ø—Ä–æ–µ–∫—Ç –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –∑–∞–Ω–æ–≤–æ
# –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –ù–ï –æ—á–∏—â–∞–µ—Ç—Å—è

echo "üîÑ –ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ RentAdmin –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ..."
echo "================================================================"
echo "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –±—É–¥—É—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –∏ –∑–∞–ø—É—â–µ–Ω—ã –∑–∞–Ω–æ–≤–æ"
echo "üíæ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç—Å—è –∏ –ù–ï –±—É–¥–µ—Ç –æ—á–∏—â–µ–Ω–∞"
echo "================================================================"
echo ""

# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
echo "üõë –®–∞–≥ 1/5: –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
echo "   - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
docker-compose -f docker-compose.host.yml down 2>/dev/null || true

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¢–û–õ–¨–ö–û –∏–∑ RentAdmin
echo "   - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ RentAdmin..."

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

if [ -f backend.pid ]; then
    BACKEND_PID=$(cat backend.pid)
    if kill -0 $BACKEND_PID 2>/dev/null; then
        echo "   - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ PID: $BACKEND_PID"
        kill $BACKEND_PID 2>/dev/null || true
        sleep 2
        # –ï—Å–ª–∏ –Ω–µ —É–±–∏–ª—Å—è - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
        if kill -0 $BACKEND_PID 2>/dev/null; then
            kill -9 $BACKEND_PID 2>/dev/null || true
        fi
    fi
    rm backend.pid
fi

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –¢–û–õ–¨–ö–û –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ RentAdmin
ps aux | grep node | grep "$PROJECT_DIR" | grep -v grep | awk '{print $2}' | xargs -r kill 2>/dev/null || true
sleep 2
ps aux | grep node | grep "$PROJECT_DIR" | grep -v grep | awk '{print $2}' | xargs -r kill -9 2>/dev/null || true

# –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ 3001 –¢–û–õ–¨–ö–û –µ—Å–ª–∏ —ç—Ç–æ –ø—Ä–æ—Ü–µ—Å—Å RentAdmin
if lsof -i :3001 > /dev/null 2>&1; then
    PROCESS_ON_3001=$(lsof -ti :3001)
    PROCESS_PATH=$(readlink -f /proc/$PROCESS_ON_3001/cwd 2>/dev/null || echo "")

    if [[ "$PROCESS_PATH" == *"RentAdmin"* ]]; then
        echo "   - –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ 3001 (RentAdmin –ø—Ä–æ—Ü–µ—Å—Å)..."
        kill -9 $PROCESS_ON_3001 2>/dev/null || true
    else
        echo "   ‚ö†Ô∏è  –ü–æ—Ä—Ç 3001 –∑–∞–Ω—è—Ç –¥—Ä—É–≥–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º ($PROCESS_PATH), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º"
    fi
fi

sleep 3
echo "‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
echo ""

# 2. –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ backend
echo "üîß –®–∞–≥ 2/5: –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ backend..."
cd backend

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Å–±–æ—Ä–∫—É
rm -rf dist/

# –°–æ–±–∏—Ä–∞–µ–º backend
if npm run build; then
    if [ -f "dist/server.js" ]; then
        echo "‚úÖ Backend —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå –û—à–∏–±–∫–∞: dist/server.js –Ω–µ —Å–æ–∑–¥–∞–Ω"
        exit 1
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ backend"
    exit 1
fi

cd ..
echo ""

# 3. –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ frontend
echo "üåê –®–∞–≥ 3/5: –ü–µ—Ä–µ—Å–±–æ—Ä–∫–∞ frontend..."
cd frontend

# –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Å–±–æ—Ä–∫—É
rm -rf dist/

# –°–æ–±–∏—Ä–∞–µ–º frontend
if npm run build; then
    if [ -f "dist/index.html" ]; then
        echo "‚úÖ Frontend —Å–æ–±—Ä–∞–Ω —É—Å–ø–µ—à–Ω–æ"
    else
        echo "‚ùå –û—à–∏–±–∫–∞: dist/index.html –Ω–µ —Å–æ–∑–¥–∞–Ω"
        exit 1
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ —Å–±–æ—Ä–∫–∏ frontend"
    exit 1
fi

cd ..
echo ""

# 4. –ó–∞–ø—É—Å–∫ backend
echo "‚öôÔ∏è  –®–∞–≥ 4/5: –ó–∞–ø—É—Å–∫ backend —Å–µ—Ä–≤–µ—Ä–∞..."
cd backend

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
npm install > /dev/null 2>&1

# –ó–∞–ø—É—Å–∫ backend –≤ —Ñ–æ–Ω–µ
nohup npm start > backend.log 2>&1 &
NPM_PID=$!

# –ñ–¥—ë–º –Ω–µ–º–Ω–æ–≥–æ
sleep 3

# –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ backend
echo "   - –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ backend..."
for i in {1..30}; do
    if lsof -i :3001 > /dev/null 2>&1 && curl -s --max-time 2 http://localhost:3001/api/health > /dev/null 2>&1; then
        echo "‚úÖ Backend –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
        BACKEND_PID=$(lsof -ti :3001 2>/dev/null || echo "")
        if [ -n "$BACKEND_PID" ]; then
            echo $BACKEND_PID > ../backend.pid
        fi
        break
    fi
    if [ $i -eq 30 ]; then
        echo "‚ùå Backend –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è –∑–∞ 30 —Å–µ–∫—É–Ω–¥"
        echo "üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞:"
        tail -20 backend.log
        exit 1
    fi
    sleep 1
done

cd ..
echo ""

# 5. –ó–∞–ø—É—Å–∫ nginx
echo "üåê –®–∞–≥ 5/5: –ó–∞–ø—É—Å–∫ nginx..."
docker-compose -f docker-compose.host.yml up -d

sleep 3

# –ü—Ä–æ–≤–µ—Ä–∫–∞ nginx
if ! docker ps | grep -q rentadmin_nginx; then
    echo "‚ùå Nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –Ω–µ –∑–∞–ø—É—â–µ–Ω"
    exit 1
fi

echo "‚úÖ Nginx –∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ"
echo ""

# –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç–æ—Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏..."

# –ü—Ä–æ–≤–µ—Ä–∫–∞ API
if curl -s http://localhost/api/health > /dev/null 2>&1; then
    echo "‚úÖ API —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "‚ùå API –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ frontend
if curl -s http://localhost/ | grep -q "html"; then
    echo "‚úÖ Frontend –¥–æ—Å—Ç—É–ø–µ–Ω"
else
    echo "‚ùå Frontend –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω"
    exit 1
fi

echo ""
echo "================================================================"
echo "üéâ RentAdmin —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω!"
echo "================================================================"
echo ""
echo "üìç –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ:"
echo "   üåê –í–Ω–µ—à–Ω–∏–π –¥–æ—Å—Ç—É–ø: http://87.242.103.146"
echo "   üè† –õ–æ–∫–∞–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø: http://localhost"
echo "   üìä –°—Ç–∞—Ç—É—Å API: http://localhost/api/health"
echo ""
echo "üìù –ö–æ–º–∞–Ω–¥—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è:"
echo "   ./stop-vm.sh    - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
echo "   ./start-vm.sh   - –æ–±—ã—á–Ω—ã–π –∑–∞–ø—É—Å–∫ (–±–µ–∑ –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∏)"
echo "   ./restart-vm.sh - –ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫"
echo ""
echo "üí° –û–±–Ω–æ–≤–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ (Ctrl+F5)"
echo "================================================================"
