#!/bin/bash

# –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Å—Ç–µ–∫–∞ RentAdmin –ª–æ–∫–∞–ª—å–Ω–æ
echo "üöÄ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–≥–æ —Å—Ç–µ–∫–∞ RentAdmin"
echo "================================="
echo ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ PostgreSQL —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
if ! command -v psql &> /dev/null; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ PostgreSQL..."
    sudo apt update
    sudo apt install -y postgresql postgresql-contrib
    sudo systemctl enable postgresql
    sudo systemctl start postgresql
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å PostgreSQL
echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ PostgreSQL..."
if sudo systemctl is-active --quiet postgresql; then
    echo "‚úÖ PostgreSQL —Ä–∞–±–æ—Ç–∞–µ—Ç"
else
    echo "üîÑ –ó–∞–ø—É—Å–∫ PostgreSQL..."
    sudo systemctl start postgresql
fi

# –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
echo "üóÑÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
sudo -u postgres psql <<EOF
-- –°–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
DO \$\$
BEGIN
    IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'postgres') THEN
        CREATE USER postgres WITH PASSWORD 'password';
    END IF;
END
\$\$;

-- –î–∞–µ–º –ø—Ä–∞–≤–∞ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
ALTER USER postgres CREATEDB SUPERUSER;

-- –°–æ–∑–¥–∞–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
SELECT 'CREATE DATABASE rent_admin'
WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'rent_admin')\gexec
EOF

echo "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –±—ç–∫–µ–Ω–¥–∞
cd backend

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ ! -d "node_modules" ]; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –±—ç–∫–µ–Ω–¥–∞..."
    npm install
fi

# –°–æ–±–∏—Ä–∞–µ–º –±—ç–∫–µ–Ω–¥
echo "üî® –°–±–æ—Ä–∫–∞ –±—ç–∫–µ–Ω–¥–∞..."
npm run build

# –ó–∞–ø—É—Å–∫–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏–∏
echo "üìä –ó–∞–ø—É—Å–∫ –º–∏–≥—Ä–∞—Ü–∏–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
DB_HOST=localhost DB_PORT=5432 DB_NAME=rent_admin DB_USER=postgres DB_PASSWORD=password npm run db:migrate

# –ó–∞–ø—É—Å–∫–∞–µ–º –±—ç–∫–µ–Ω–¥ –≤ —Ñ–æ–Ω–µ
echo "üéØ –ó–∞–ø—É—Å–∫ –±—ç–∫–µ–Ω–¥–∞..."
DB_HOST=localhost DB_PORT=5432 DB_NAME=rent_admin DB_USER=postgres DB_PASSWORD=password JWT_SECRET=super-secret-jwt-key-for-rent-admin-2024 PIN_CODE=20031997 CORS_ORIGIN="*" NODE_ENV=development PORT=3001 npm start &
BACKEND_PID=$!
echo $BACKEND_PID > ../backend.pid

echo "‚úÖ –ë—ç–∫–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω (PID: $BACKEND_PID)"

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
cd ..

# –ñ–¥–µ–º –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞
echo "‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ –±—ç–∫–µ–Ω–¥–∞..."
sleep 5

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ç–∫–µ–Ω–¥
for i in {1..10}; do
    if curl -s http://localhost:3001/api/health > /dev/null; then
        echo "‚úÖ –ë—ç–∫–µ–Ω–¥ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ"
        break
    fi
    if [ $i -eq 10 ]; then
        echo "‚ùå –ë—ç–∫–µ–Ω–¥ –Ω–µ –∑–∞–ø—É—Å—Ç–∏–ª—Å—è"
        exit 1
    fi
    sleep 2
    echo -n "."
done

# –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤–æ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
cd frontend

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
if [ ! -d "node_modules" ]; then
    echo "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
    npm install
fi

# –û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é API –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±—ç–∫–µ–Ω–¥–∞
echo "üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ API –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±—ç–∫–µ–Ω–¥–∞..."

# –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —Å –ª–æ–∫–∞–ª—å–Ω—ã–º API
cat > src/config/api.config.js << 'EOL'
// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –±—ç–∫–µ–Ω–¥–∞
const LOCAL_IP = window.location.hostname;

export const API_CONFIG = {
  baseURL: `http://${LOCAL_IP}:3001/api`,
  timeout: 10000,
  headers: {
    'Content-Type': 'application/json',
  }
};

export const API_SERVERS = [
  {
    name: 'Local Backend',
    url: `http://${LOCAL_IP}:3001/api`,
    isDefault: true
  }
];
EOL

echo "‚úÖ API –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ –Ω–∞ http://localhost:3001/api"

# –°–æ–±–∏—Ä–∞–µ–º —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥
echo "üî® –°–±–æ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
npm run build

echo ""
echo "üéâ –ü–û–õ–ù–´–ô –°–¢–ï–ö –ó–ê–ü–£–©–ï–ù!"
echo ""
echo "üìã –î–û–°–¢–£–ü–ù–´–ï –ê–î–†–ï–°–ê:"
echo "üéØ –ë—ç–∫–µ–Ω–¥ API: http://localhost:3001/api"
echo "üåê –§—Ä–æ–Ω—Ç–µ–Ω–¥: http://localhost:3000/"
echo ""
echo "üîß –£–ü–†–ê–í–õ–ï–ù–ò–ï:"
echo "‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±—ç–∫–µ–Ω–¥–∞: kill \$(cat backend.pid)"
echo "üìä –õ–æ–≥–∏ –±—ç–∫–µ–Ω–¥–∞: tail -f backend/logs/app.log"
echo "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫: ./start-fullstack.sh"
echo ""

# –ó–∞–ø—É—Å–∫–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Å–µ—Ä–≤–µ—Ä —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
echo "üåê –ó–∞–ø—É—Å–∫ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞..."
cd ..

# –°–æ–∑–¥–∞–µ–º –ø—Ä–æ—Å—Ç–æ–π HTTP —Å–µ—Ä–≤–µ—Ä –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
node -e "
const express = require('express');
const path = require('path');
const app = express();

// Serve static files from frontend/dist
app.use(express.static(path.join(__dirname, 'frontend/dist')));

// Handle React Router
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'frontend/dist/index.html'));
});

const PORT = 3000;
app.listen(PORT, '0.0.0.0', () => {
  console.log(\`Frontend server running on http://localhost:\${PORT}\`);
});
" &

FRONTEND_PID=$!
echo $FRONTEND_PID > frontend.pid

echo "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥ –∑–∞–ø—É—â–µ–Ω (PID: $FRONTEND_PID)"
echo ""
echo "üöÄ –í—Å–µ –≥–æ—Ç–æ–≤–æ! –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000/ –≤ –±—Ä–∞—É–∑–µ—Ä–µ"