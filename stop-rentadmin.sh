#!/bin/bash

# –ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –¢–û–õ–¨–ö–û RentAdmin –±–µ–∑ –≤–ª–∏—è–Ω–∏—è –Ω–∞ –¥—Ä—É–≥–∏–µ –ø—Ä–æ–µ–∫—Ç—ã

echo "üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ RentAdmin..."

# –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
PROJECT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ PID —Ñ–∞–π–ª
if [ -f "$PROJECT_DIR/backend.pid" ]; then
    BACKEND_PID=$(cat "$PROJECT_DIR/backend.pid")
    if ps -p $BACKEND_PID > /dev/null 2>&1; then
        echo "   - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend (PID: $BACKEND_PID)..."
        kill $BACKEND_PID 2>/dev/null || true
        sleep 2

        # –ï—Å–ª–∏ –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª—Å—è - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ
        if ps -p $BACKEND_PID > /dev/null 2>&1; then
            echo "   - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞..."
            kill -9 $BACKEND_PID 2>/dev/null || true
        fi
    fi
    rm "$PROJECT_DIR/backend.pid"
fi

# 2. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ RentAdmin
echo "   - –ü–æ–∏—Å–∫ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ RentAdmin..."
PIDS=$(ps aux | grep node | grep -E "(RentAdmin|rentadmin)" | grep -v grep | awk '{print $2}')

if [ ! -z "$PIDS" ]; then
    echo "   - –ù–∞–π–¥–µ–Ω–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: $(echo $PIDS | wc -w)"
    for PID in $PIDS; do
        PROCESS_CWD=$(readlink -f /proc/$PID/cwd 2>/dev/null || echo "")
        if [[ "$PROCESS_CWD" == *"RentAdmin"* ]] || [[ "$PROCESS_CWD" == *"rentadmin"* ]]; then
            echo "   - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–∞ $PID ($PROCESS_CWD)"
            kill $PID 2>/dev/null || true
        fi
    done

    sleep 2

    # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ –µ—Å–ª–∏ –Ω–µ –æ—Å—Ç–∞–Ω–æ–≤–∏–ª–∏—Å—å
    for PID in $PIDS; do
        if ps -p $PID > /dev/null 2>&1; then
            PROCESS_CWD=$(readlink -f /proc/$PID/cwd 2>/dev/null || echo "")
            if [[ "$PROCESS_CWD" == *"RentAdmin"* ]] || [[ "$PROCESS_CWD" == *"rentadmin"* ]]; then
                kill -9 $PID 2>/dev/null || true
            fi
        fi
    done
fi

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 3001
if command -v lsof &> /dev/null && lsof -i :3001 > /dev/null 2>&1; then
    PROCESS_ON_3001=$(lsof -ti :3001)
    PROCESS_PATH=$(readlink -f /proc/$PROCESS_ON_3001/cwd 2>/dev/null || echo "")

    if [[ "$PROCESS_PATH" == *"RentAdmin"* ]]; then
        echo "   - –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–∞ 3001..."
        kill -9 $PROCESS_ON_3001 2>/dev/null || true
    else
        echo "   ‚ÑπÔ∏è  –ü–æ—Ä—Ç 3001 –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥—Ä—É–≥–∏–º –ø—Ä–æ–µ–∫—Ç–æ–º, –Ω–µ —Ç—Ä–æ–≥–∞–µ–º"
    fi
fi

# 4. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
if [ -f "$PROJECT_DIR/docker-compose.host.yml" ]; then
    echo "   - –û—Å—Ç–∞–Ω–æ–≤–∫–∞ nginx –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
    cd "$PROJECT_DIR"
    docker-compose -f docker-compose.host.yml down 2>/dev/null || true
fi

echo ""
echo "‚úÖ RentAdmin –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
echo ""
echo "üí° –î–ª—è –∑–∞–ø—É—Å–∫–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:"
echo "   ./restart-vm.sh  - –ø–æ–ª–Ω–∞—è –ø–µ—Ä–µ—Å–±–æ—Ä–∫–∞ –∏ –∑–∞–ø—É—Å–∫"
