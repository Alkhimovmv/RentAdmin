#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ü–û–õ–ù–û–ô –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ RentAdmin –Ω–∞ VM
# –í —Ç–æ–º —á–∏—Å–ª–µ –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
# –ó–∞–ø—É—Å–∫–∞—Ç—å –ù–ï–ü–û–°–†–ï–î–°–¢–í–ï–ù–ù–û –Ω–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ

echo "üõë –ü–æ–ª–Ω–∞—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ RentAdmin –Ω–∞ VM..."
echo "======================================"
echo ""

# 1. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo "1Ô∏è‚É£  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
if docker ps -q --filter "name=rentadmin" | grep -q .; then
    docker-compose -f docker-compose.host.yml down
    echo "‚úÖ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚ÑπÔ∏è  Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
fi

# 2. –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤
echo ""
echo "2Ô∏è‚É£  –û—Ç–∫–ª—é—á–µ–Ω–∏–µ –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
CONTAINERS=$(docker ps -a -q --filter "name=rentadmin")
if [ ! -z "$CONTAINERS" ]; then
    docker update --restart=no $CONTAINERS
    echo "‚úÖ –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –æ—Ç–∫–ª—é—á–µ–Ω –¥–ª—è –≤—Å–µ—Ö –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ rentadmin"
else
    echo "‚ÑπÔ∏è  –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
fi

# 3. –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
echo ""
read -p "‚ùì –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ø–æ–ª–Ω–æ—Å—Ç—å—é? (y/N): " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]; then
    if [ ! -z "$CONTAINERS" ]; then
        docker rm -f $CONTAINERS
        echo "‚úÖ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —É–¥–∞–ª–µ–Ω—ã"
    fi
fi

# 4. –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend –ø—Ä–æ—Ü–µ—Å—Å–∞
echo ""
echo "3Ô∏è‚É£  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ backend –ø—Ä–æ—Ü–µ—Å—Å–∞..."
if [ -f backend.pid ]; then
    BACKEND_PID=$(cat backend.pid)
    if kill -0 $BACKEND_PID 2>/dev/null; then
        kill $BACKEND_PID
        echo "‚úÖ Backend –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω (PID: $BACKEND_PID)"
    else
        echo "‚ÑπÔ∏è  Backend –ø—Ä–æ—Ü–µ—Å—Å —É–∂–µ –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω"
    fi
    rm backend.pid
else
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±
    if pkill -f "node.*dist/server.js"; then
        echo "‚úÖ Backend –ø—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        echo "‚ÑπÔ∏è  Backend –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
fi

# 5. –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤
echo ""
echo "4Ô∏è‚É£  –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤..."
PORTS_FREED=0

if lsof -ti :80 >/dev/null 2>&1; then
    lsof -ti :80 | xargs -r kill -9
    echo "‚úÖ –ü–æ—Ä—Ç 80 –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω"
    PORTS_FREED=1
fi

if lsof -ti :3001 >/dev/null 2>&1; then
    lsof -ti :3001 | xargs -r kill -9
    echo "‚úÖ –ü–æ—Ä—Ç 3001 –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω"
    PORTS_FREED=1
fi

if [ $PORTS_FREED -eq 0 ]; then
    echo "‚ÑπÔ∏è  –í—Å–µ –ø–æ—Ä—Ç—ã —É–∂–µ —Å–≤–æ–±–æ–¥–Ω—ã"
fi

# 6. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
echo ""
echo "5Ô∏è‚É£  –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞..."
echo ""

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker
DOCKER_COUNT=$(docker ps --filter "name=rentadmin" | grep -c rentadmin || echo "0")
if [ "$DOCKER_COUNT" -eq "0" ]; then
    echo "‚úÖ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
else
    echo "‚ö†Ô∏è  Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã: $DOCKER_COUNT –µ—â–µ —Ä–∞–±–æ—Ç–∞—é—Ç"
    docker ps --filter "name=rentadmin"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
PORT_80=$(lsof -ti :80 2>/dev/null | wc -l)
PORT_3001=$(lsof -ti :3001 2>/dev/null | wc -l)

if [ "$PORT_80" -eq "0" ]; then
    echo "‚úÖ –ü–æ—Ä—Ç 80: —Å–≤–æ–±–æ–¥–µ–Ω"
else
    echo "‚ö†Ô∏è  –ü–æ—Ä—Ç 80: –∑–∞–Ω—è—Ç ($PORT_80 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤)"
fi

if [ "$PORT_3001" -eq "0" ]; then
    echo "‚úÖ –ü–æ—Ä—Ç 3001: —Å–≤–æ–±–æ–¥–µ–Ω"
else
    echo "‚ö†Ô∏è  –ü–æ—Ä—Ç 3001: –∑–∞–Ω—è—Ç ($PORT_3001 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤)"
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ backend –ø—Ä–æ—Ü–µ—Å—Å–∞
BACKEND_PROC=$(ps aux | grep -c "node.*dist/server.js" || echo "0")
if [ "$BACKEND_PROC" -le "1" ]; then  # 1 –ø–æ—Ç–æ–º—É —á—Ç–æ —Å–∞–º grep —Ç–æ–∂–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è
    echo "‚úÖ Backend –ø—Ä–æ—Ü–µ—Å—Å: –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
else
    echo "‚ö†Ô∏è  Backend –ø—Ä–æ—Ü–µ—Å—Å: –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç"
    ps aux | grep "node.*dist/server.js" | grep -v grep
fi

echo ""
echo "üéâ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo ""
echo "üìù –ü—Ä–∏–º–µ—á–∞–Ω–∏—è:"
echo "   - Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
echo "   - –ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ Docker –æ—Ç–∫–ª—é—á–µ–Ω"
echo "   - Backend –ø—Ä–æ—Ü–µ—Å—Å—ã –∑–∞–≤–µ—Ä—à–µ–Ω—ã"
echo "   - –ü–æ—Ä—Ç—ã –æ—Å–≤–æ–±–æ–∂–¥–µ–Ω—ã"
echo ""
echo "‚ÑπÔ∏è  –ü–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏ VM –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –ù–ï –∑–∞–ø—É—Å—Ç—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏"
echo ""
